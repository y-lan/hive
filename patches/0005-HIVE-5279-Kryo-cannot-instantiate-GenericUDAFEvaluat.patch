From 961a5d288458b4d760936c72719328cec3f550af Mon Sep 17 00:00:00 2001
From: yuyang-lan <yuyang.lan@gree.net>
Date: Tue, 4 Mar 2014 17:16:22 +0900
Subject: [PATCH] [HIVE-5279] Kryo cannot instantiate GenericUDAFEvaluator in
 GroupByDesc

---
 .../java/org/apache/hadoop/hive/ql/exec/UDAF.java  |   1 +
 .../hadoop/hive/ql/plan/AggregationDesc.java       |  64 +++++++--
 .../ql/udf/generic/GenericUDAFCollectList.java     |  18 +++
 .../generic/GenericUDAFMkCollectionEvaluator.java  |  29 +++-
 .../hive/ql/udf/generic/GenericUDAFSumList.java    | 160 +++++++++++++++++++++
 ql/src/test/queries/clientpositive/udaf_sum_list.q |   6 +
 .../results/clientpositive/udaf_sum_list.q.out     |  19 +++
 ql/src/test/results/compiler/plan/groupby1.q.xml   |   8 +-
 ql/src/test/results/compiler/plan/groupby2.q.xml   |  16 +--
 ql/src/test/results/compiler/plan/groupby3.q.xml   |  40 +++---
 ql/src/test/results/compiler/plan/groupby5.q.xml   |   8 +-
 11 files changed, 318 insertions(+), 51 deletions(-)
 create mode 100644 ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFSumList.java
 create mode 100644 ql/src/test/queries/clientpositive/udaf_sum_list.q
 create mode 100644 ql/src/test/results/clientpositive/udaf_sum_list.q.out

diff --git a/ql/src/java/org/apache/hadoop/hive/ql/exec/UDAF.java b/ql/src/java/org/apache/hadoop/hive/ql/exec/UDAF.java
index b64d889..8d3c942 100755
--- a/ql/src/java/org/apache/hadoop/hive/ql/exec/UDAF.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/exec/UDAF.java
@@ -49,6 +49,7 @@
  * partial);
  * 
  */
+@Deprecated
 public class UDAF {
 
   /**
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/plan/AggregationDesc.java b/ql/src/java/org/apache/hadoop/hive/ql/plan/AggregationDesc.java
index ab70bab..b35b313 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/plan/AggregationDesc.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/plan/AggregationDesc.java
@@ -18,28 +18,38 @@
 
 package org.apache.hadoop.hive.ql.plan;
 
+import java.io.Externalizable;
+import java.io.Serializable;
+
+import org.apache.hadoop.hive.common.JavaUtils;
+import org.apache.hadoop.hive.ql.exec.PTFUtils;
 import org.apache.hadoop.hive.ql.udf.generic.GenericUDAFEvaluator;
+import org.apache.hadoop.util.ReflectionUtils;
 
 /**
  * AggregationDesc.
  *
  */
 public class AggregationDesc implements java.io.Serializable {
+
+  static {
+    PTFUtils.makeTransient(AggregationDesc.class, "genericUDAFEvaluator");
+  }
+
   private static final long serialVersionUID = 1L;
   private String genericUDAFName;
 
-  /**
-   * In case genericUDAFEvaluator is Serializable, we will serialize the object.
-   * 
-   * In case genericUDAFEvaluator does not implement Serializable, Java will
-   * remember the class of genericUDAFEvaluator and creates a new instance when
-   * deserialized. This is exactly what we want.
-   */
-  private GenericUDAFEvaluator genericUDAFEvaluator;
   private java.util.ArrayList<ExprNodeDesc> parameters;
   private boolean distinct;
   private GenericUDAFEvaluator.Mode mode;
 
+  // used for GenericUDAFEvaluator
+  private String genericUDAFEvaluatorClassName;
+  // used for GenericUDAFBridgeEvaluator
+  private GenericUDAFEvaluator genericUDAFWritableEvaluator;
+
+  private transient GenericUDAFEvaluator genericUDAFEvaluator;
+
   public AggregationDesc() {
   }
 
@@ -48,10 +58,10 @@ public AggregationDesc(final String genericUDAFName,
       final java.util.ArrayList<ExprNodeDesc> parameters,
       final boolean distinct, final GenericUDAFEvaluator.Mode mode) {
     this.genericUDAFName = genericUDAFName;
-    this.genericUDAFEvaluator = genericUDAFEvaluator;
     this.parameters = parameters;
     this.distinct = distinct;
     this.mode = mode;
+    setGenericUDAFEvaluator(genericUDAFEvaluator);
   }
 
   public void setGenericUDAFName(final String genericUDAFName) {
@@ -65,10 +75,44 @@ public String getGenericUDAFName() {
   public void setGenericUDAFEvaluator(
       final GenericUDAFEvaluator genericUDAFEvaluator) {
     this.genericUDAFEvaluator = genericUDAFEvaluator;
+    if (genericUDAFEvaluator instanceof Serializable ||
+        genericUDAFEvaluator instanceof Externalizable) {
+      this.genericUDAFWritableEvaluator = genericUDAFEvaluator;
+    } else {
+      this.genericUDAFEvaluatorClassName = genericUDAFEvaluator.getClass().getName();
+    }
   }
 
   public GenericUDAFEvaluator getGenericUDAFEvaluator() {
-    return genericUDAFEvaluator;
+    if (genericUDAFEvaluator != null) {
+      return genericUDAFEvaluator;
+    }
+    if (genericUDAFWritableEvaluator != null) {
+      return genericUDAFEvaluator = genericUDAFWritableEvaluator;
+    }
+    try {
+      return genericUDAFEvaluator =
+          ReflectionUtils.newInstance(Class.forName(genericUDAFEvaluatorClassName, true,
+          JavaUtils.getClassLoader()).asSubclass(GenericUDAFEvaluator.class), null);
+    } catch (ClassNotFoundException e) {
+      throw new RuntimeException(e);
+    }
+  }
+
+  public String getGenericUDAFEvaluatorClassName() {
+    return genericUDAFEvaluatorClassName;
+  }
+
+  public void setGenericUDAFEvaluatorClassName(String genericUDAFEvaluatorClassName) {
+    this.genericUDAFEvaluatorClassName = genericUDAFEvaluatorClassName;
+  }
+
+  public GenericUDAFEvaluator getGenericUDAFWritableEvaluator() {
+    return genericUDAFWritableEvaluator;
+  }
+
+  public void setGenericUDAFWritableEvaluator(GenericUDAFEvaluator genericUDAFWritableEvaluator) {
+    this.genericUDAFWritableEvaluator = genericUDAFWritableEvaluator;
   }
 
   public java.util.ArrayList<ExprNodeDesc> getParameters() {
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCollectList.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCollectList.java
index b617f35..536c4a7 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCollectList.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFCollectList.java
@@ -1,3 +1,21 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package org.apache.hadoop.hive.ql.udf.generic;
 
 import org.apache.commons.logging.Log;
diff --git a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMkCollectionEvaluator.java b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMkCollectionEvaluator.java
index 43c76d1..54a35ae 100644
--- a/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMkCollectionEvaluator.java
+++ b/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFMkCollectionEvaluator.java
@@ -1,5 +1,24 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package org.apache.hadoop.hive.ql.udf.generic;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.HashSet;
@@ -12,14 +31,15 @@
 import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.StandardListObjectInspector;
 
-import com.esotericsoftware.minlog.Log;
+public class GenericUDAFMkCollectionEvaluator extends GenericUDAFEvaluator
+    implements Serializable {
 
-public class GenericUDAFMkCollectionEvaluator extends GenericUDAFEvaluator {
+  private static final long serialVersionUID = 1l;
 
   enum BufferType { SET, LIST }
 
   // For PARTIAL1 and COMPLETE: ObjectInspectors for original data
-  private PrimitiveObjectInspector inputOI;
+  private transient PrimitiveObjectInspector inputOI;
   // For PARTIAL2 and FINAL: ObjectInspectors for partial aggregations (list
   // of objs)
   private transient StandardListObjectInspector loi;
@@ -29,8 +49,7 @@
   private BufferType bufferType;
 
   //needed by kyro
-  public GenericUDAFMkCollectionEvaluator(){
-
+  public GenericUDAFMkCollectionEvaluator() {
   }
 
   public GenericUDAFMkCollectionEvaluator(BufferType bufferType){
diff --git a/ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFSumList.java b/ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFSumList.java
new file mode 100644
index 0000000..55d7912
--- /dev/null
+++ b/ql/src/test/org/apache/hadoop/hive/ql/udf/generic/GenericUDAFSumList.java
@@ -0,0 +1,160 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.hadoop.hive.ql.udf.generic;
+
+import org.apache.commons.logging.Log;
+import org.apache.commons.logging.LogFactory;
+import org.apache.hadoop.hive.ql.exec.Description;
+import org.apache.hadoop.hive.ql.exec.UDFArgumentTypeException;
+import org.apache.hadoop.hive.ql.metadata.HiveException;
+import org.apache.hadoop.hive.ql.parse.SemanticException;
+import org.apache.hadoop.hive.ql.util.JavaDataModel;
+import org.apache.hadoop.hive.serde2.objectinspector.ListObjectInspector;
+import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
+import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorConverters;
+import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
+import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;
+import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorUtils;
+import org.apache.hadoop.io.LongWritable;
+
+/**
+ * GenericUDAFSum.
+ *
+ */
+@Description(name = "sum_list", value = "_FUNC_(x) - Returns the sum of a set of numbers")
+public class GenericUDAFSumList extends AbstractGenericUDAFResolver {
+
+  static final Log LOG = LogFactory.getLog(GenericUDAFSumList.class.getName());
+
+  @Override
+  public GenericUDAFEvaluator getEvaluator(GenericUDAFParameterInfo info)
+    throws SemanticException {
+    ObjectInspector[] inspectors = info.getParameterObjectInspectors();
+    if (inspectors.length != 1) {
+      throw new UDFArgumentTypeException(inspectors.length - 1,
+          "Exactly one argument is expected.");
+    }
+
+    if (inspectors[0].getCategory() != ObjectInspector.Category.LIST) {
+      throw new UDFArgumentTypeException(0, "Argument should be a list type");
+    }
+
+    ListObjectInspector listOI = (ListObjectInspector) inspectors[0];
+    ObjectInspector elementOI = listOI.getListElementObjectInspector();
+
+    if (elementOI.getCategory() != ObjectInspector.Category.PRIMITIVE) {
+      throw new UDFArgumentTypeException(0,
+          "Only primitive type arguments are accepted but "
+          + elementOI.getTypeName() + " is passed.");
+    }
+    PrimitiveObjectInspector.PrimitiveCategory pcat =
+        ((PrimitiveObjectInspector)elementOI).getPrimitiveCategory();
+    return new GenericUDAFSumLong();
+  }
+
+  /**
+   * GenericUDAFSumLong.
+   *
+   */
+  public static class GenericUDAFSumLong extends GenericUDAFEvaluator {
+    private ListObjectInspector listOI;
+    private PrimitiveObjectInspector elementOI;
+    private ObjectInspectorConverters.Converter toLong;
+    private PrimitiveObjectInspector inputOI;
+    private LongWritable result;
+
+    @Override
+    public ObjectInspector init(Mode m, ObjectInspector[] parameters) throws HiveException {
+      assert (parameters.length == 1);
+      super.init(m, parameters);
+      result = new LongWritable(0);
+      if (m == Mode.PARTIAL1 || m == Mode.COMPLETE) {
+        listOI = (ListObjectInspector) parameters[0];
+        elementOI = (PrimitiveObjectInspector) listOI.getListElementObjectInspector();
+        toLong = ObjectInspectorConverters.getConverter(elementOI,
+            PrimitiveObjectInspectorFactory.javaLongObjectInspector);
+      } else {
+        inputOI = (PrimitiveObjectInspector) parameters[0];
+      }
+      return PrimitiveObjectInspectorFactory.writableLongObjectInspector;
+    }
+
+    /** class for storing double sum value. */
+    @AggregationType(estimable = true)
+    static class SumLongAgg extends AbstractAggregationBuffer {
+      boolean empty;
+      long sum;
+      @Override
+      public int estimate() { return JavaDataModel.PRIMITIVES1 + JavaDataModel.PRIMITIVES2; }
+    }
+
+    @Override
+    public AggregationBuffer getNewAggregationBuffer() throws HiveException {
+      SumLongAgg result = new SumLongAgg();
+      reset(result);
+      return result;
+    }
+
+    @Override
+    public void reset(AggregationBuffer agg) throws HiveException {
+      SumLongAgg myagg = (SumLongAgg) agg;
+      myagg.empty = true;
+      myagg.sum = 0;
+    }
+
+    @Override
+    public void iterate(AggregationBuffer agg, Object[] parameters) throws HiveException {
+      assert (parameters.length == 1);
+      SumLongAgg myagg = (SumLongAgg) agg;
+      int length = listOI.getListLength(parameters[0]);
+      for (int i = 0; i < length; i++) {
+        Object element = listOI.getListElement(parameters[0], i);
+        if (element != null) {
+          myagg.sum += (Long)toLong.convert(element);
+          myagg.empty = false;
+        }
+      }
+    }
+
+    @Override
+    public Object terminatePartial(AggregationBuffer agg) throws HiveException {
+      return terminate(agg);
+    }
+
+    @Override
+    public void merge(AggregationBuffer agg, Object partial) throws HiveException {
+      if (partial != null) {
+        SumLongAgg myagg = (SumLongAgg) agg;
+        myagg.sum += PrimitiveObjectInspectorUtils.getLong(partial, inputOI);
+        myagg.empty = false;
+      }
+    }
+
+    @Override
+    public Object terminate(AggregationBuffer agg) throws HiveException {
+      SumLongAgg myagg = (SumLongAgg) agg;
+      if (myagg.empty) {
+        return null;
+      }
+      result.set(myagg.sum);
+      return result;
+    }
+
+  }
+
+}
diff --git a/ql/src/test/queries/clientpositive/udaf_sum_list.q b/ql/src/test/queries/clientpositive/udaf_sum_list.q
new file mode 100644
index 0000000..0d86a42
--- /dev/null
+++ b/ql/src/test/queries/clientpositive/udaf_sum_list.q
@@ -0,0 +1,6 @@
+-- HIVE-5279
+-- GenericUDAFSumList has Converter which does not have default constructor
+-- After
+create temporary function sum_list as 'org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSumList';
+
+select sum_list(array(key, key)) from src;
diff --git a/ql/src/test/results/clientpositive/udaf_sum_list.q.out b/ql/src/test/results/clientpositive/udaf_sum_list.q.out
new file mode 100644
index 0000000..b1922d9
--- /dev/null
+++ b/ql/src/test/results/clientpositive/udaf_sum_list.q.out
@@ -0,0 +1,19 @@
+PREHOOK: query: -- HIVE-5279
+-- GenericUDAFSumList has Converter which does not have default constructor
+-- After
+create temporary function sum_list as 'org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSumList'
+PREHOOK: type: CREATEFUNCTION
+POSTHOOK: query: -- HIVE-5279
+-- GenericUDAFSumList has Converter which does not have default constructor
+-- After
+create temporary function sum_list as 'org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSumList'
+POSTHOOK: type: CREATEFUNCTION
+PREHOOK: query: select sum_list(array(key, key)) from src
+PREHOOK: type: QUERY
+PREHOOK: Input: default@src
+#### A masked pattern was here ####
+POSTHOOK: query: select sum_list(array(key, key)) from src
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@src
+#### A masked pattern was here ####
+260182
diff --git a/ql/src/test/results/compiler/plan/groupby1.q.xml b/ql/src/test/results/compiler/plan/groupby1.q.xml
index 2e35d98..4b43790 100755
--- a/ql/src/test/results/compiler/plan/groupby1.q.xml
+++ b/ql/src/test/results/compiler/plan/groupby1.q.xml
@@ -562,8 +562,8 @@
                    <object class="java.util.ArrayList"> 
                     <void method="add"> 
                      <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFSum$GenericUDAFSumDouble0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>sum</string> 
@@ -1486,8 +1486,8 @@
            <object class="java.util.ArrayList"> 
             <void method="add"> 
              <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFSum$GenericUDAFSumDouble0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>sum</string> 
diff --git a/ql/src/test/results/compiler/plan/groupby2.q.xml b/ql/src/test/results/compiler/plan/groupby2.q.xml
index fc3a37f..bb5bca6 100755
--- a/ql/src/test/results/compiler/plan/groupby2.q.xml
+++ b/ql/src/test/results/compiler/plan/groupby2.q.xml
@@ -584,8 +584,8 @@
                       <void property="distinct"> 
                        <boolean>true</boolean> 
                       </void> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFCount$GenericUDAFCountEvaluator0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCount$GenericUDAFCountEvaluator"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCount$GenericUDAFCountEvaluator</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>count</string> 
@@ -647,8 +647,8 @@
                     </void> 
                     <void method="add"> 
                      <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFSum$GenericUDAFSumDouble0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>sum</string> 
@@ -1709,8 +1709,8 @@
               <void property="distinct"> 
                <boolean>true</boolean> 
               </void> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFCount$GenericUDAFCountEvaluator0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCount$GenericUDAFCountEvaluator</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>count</string> 
@@ -1738,8 +1738,8 @@
             </void> 
             <void method="add"> 
              <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFSum$GenericUDAFSumDouble0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>sum</string> 
diff --git a/ql/src/test/results/compiler/plan/groupby3.q.xml b/ql/src/test/results/compiler/plan/groupby3.q.xml
index f3a943c..f184161 100644
--- a/ql/src/test/results/compiler/plan/groupby3.q.xml
+++ b/ql/src/test/results/compiler/plan/groupby3.q.xml
@@ -606,8 +606,8 @@
                    <object class="java.util.ArrayList"> 
                     <void method="add"> 
                      <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFSum$GenericUDAFSumDouble0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>sum</string> 
@@ -669,8 +669,8 @@
                     </void> 
                     <void method="add"> 
                      <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>avg</string> 
@@ -733,8 +733,8 @@
                       <void property="distinct"> 
                        <boolean>true</boolean> 
                       </void> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble1" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>avg</string> 
@@ -794,8 +794,8 @@
                     </void> 
                     <void method="add"> 
                      <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFMax$GenericUDAFMaxEvaluator0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMax$GenericUDAFMaxEvaluator"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMax$GenericUDAFMaxEvaluator</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>max</string> 
@@ -855,8 +855,8 @@
                     </void> 
                     <void method="add"> 
                      <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFMin$GenericUDAFMinEvaluator0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMin$GenericUDAFMinEvaluator"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMin$GenericUDAFMinEvaluator</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>min</string> 
@@ -1986,8 +1986,8 @@
            <object class="java.util.ArrayList"> 
             <void method="add"> 
              <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFSum$GenericUDAFSumDouble0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>sum</string> 
@@ -2015,8 +2015,8 @@
             </void> 
             <void method="add"> 
              <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>avg</string> 
@@ -2045,8 +2045,8 @@
               <void property="distinct"> 
                <boolean>true</boolean> 
               </void> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble1"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage$GenericUDAFAverageEvaluatorDouble</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>avg</string> 
@@ -2074,8 +2074,8 @@
             </void> 
             <void method="add"> 
              <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFMax$GenericUDAFMaxEvaluator0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMax$GenericUDAFMaxEvaluator</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>max</string> 
@@ -2101,8 +2101,8 @@
             </void> 
             <void method="add"> 
              <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFMin$GenericUDAFMinEvaluator0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMin$GenericUDAFMinEvaluator</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>min</string> 
diff --git a/ql/src/test/results/compiler/plan/groupby5.q.xml b/ql/src/test/results/compiler/plan/groupby5.q.xml
index 2ba2ebe..9f8d06d 100644
--- a/ql/src/test/results/compiler/plan/groupby5.q.xml
+++ b/ql/src/test/results/compiler/plan/groupby5.q.xml
@@ -409,8 +409,8 @@
                    <object class="java.util.ArrayList"> 
                     <void method="add"> 
                      <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-                      <void property="genericUDAFEvaluator"> 
-                       <object id="GenericUDAFSum$GenericUDAFSumDouble0" class="org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble"/> 
+                      <void property="genericUDAFEvaluatorClassName"> 
+                       <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
                       </void> 
                       <void property="genericUDAFName"> 
                        <string>sum</string> 
@@ -1355,8 +1355,8 @@
            <object class="java.util.ArrayList"> 
             <void method="add"> 
              <object class="org.apache.hadoop.hive.ql.plan.AggregationDesc"> 
-              <void property="genericUDAFEvaluator"> 
-               <object idref="GenericUDAFSum$GenericUDAFSumDouble0"/> 
+              <void property="genericUDAFEvaluatorClassName"> 
+               <string>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum$GenericUDAFSumDouble</string> 
               </void> 
               <void property="genericUDAFName"> 
                <string>sum</string> 
-- 
1.8.3.4 (Apple Git-47)

